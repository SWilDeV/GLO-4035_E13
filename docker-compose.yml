version: "3.9"
services:
  neo4j:
    image: neo4j:3.5.8
    hostname: neo
    container_name: neo4j
    networks:
      backend:
        ipv4_address: 172.21.0.2
    expose:
      - 7474
      - 7687
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_AUTH=$NEO4J_CREDENTIALS
      - NEO4J_INTERNAL_URL=$NEO4J_INTERNAL_URL
  mongo:
    image: mongo:5.0
    container_name: mongo
    ports:
      - 27017:27017
    expose:
      - 27017
    networks:
      backend:
        ipv4_address: 172.21.0.3
    volumes:
      - ~/apps/mongo:/data/db
  neo4j_populate:
    container_name: neo4j_populate
    build: .
    networks:
      backend:
        ipv4_address: 172.21.0.4
    depends_on:
      - neo4j
    command: python3 -u populate_neo4j.py
  mongo_populate:
    container_name: mongo_populate
    build: .
    networks:
      backend:
        ipv4_address: 172.21.0.6
    depends_on:
      - mongo
    command: python3 -u populate_mongo.py
  api:
    build: .
    expose:
      - 8080
    ports:
      - "8080:8080"
    depends_on:
      - neo4j
      - mongo
    networks:
      backend:
        ipv4_address: 172.21.0.5
    container_name: api
    command: flask run --host=0.0.0.0 --port=8080
networks:
  backend:
    driver: bridge
    name: network_backend
    ipam:
      driver: default
      config:
        - subnet: "172.21.0.0/24"
          gateway: 172.21.0.1